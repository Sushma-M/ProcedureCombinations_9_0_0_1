/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testingprocedurecombinations.classicmodels.models.procedure;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.io.Serializable;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.wavemaker.runtime.data.annotations.ColumnAlias;

public class ProcedureInoutInoutInResponse implements Serializable {


    @JsonProperty("count1")
    @ColumnAlias("count1")
    private Integer count1;

    @JsonProperty("count2")
    @ColumnAlias("count2")
    private Integer count2;

    @JsonProperty("count3")
    @ColumnAlias("count3")
    private Integer count3;

    public Integer getCount1() {
        return this.count1;
    }

    public void setCount1(Integer count1) {
        this.count1 = count1;
    }

    public Integer getCount2() {
        return this.count2;
    }

    public void setCount2(Integer count2) {
        this.count2 = count2;
    }

    public Integer getCount3() {
        return this.count3;
    }

    public void setCount3(Integer count3) {
        this.count3 = count3;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ProcedureInoutInoutInResponse)) return false;
        final ProcedureInoutInoutInResponse procedureInoutInoutInResponse = (ProcedureInoutInoutInResponse) o;
        return Objects.equals(getCount1(), procedureInoutInoutInResponse.getCount1()) &&
                Objects.equals(getCount2(), procedureInoutInoutInResponse.getCount2()) &&
                Objects.equals(getCount3(), procedureInoutInoutInResponse.getCount3());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getCount1(),
                getCount2(),
                getCount3());
    }
}
